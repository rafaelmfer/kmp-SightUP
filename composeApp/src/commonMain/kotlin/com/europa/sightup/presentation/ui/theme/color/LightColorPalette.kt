package com.europa.sightup.presentation.ui.theme.color

import androidx.compose.material3.lightColorScheme
import androidx.compose.runtime.staticCompositionLocalOf

/**
 * "primary": "color_primary_600",
 * "onPrimary": "content_on_color",
 * "primaryContainer": "color_primary_200",
 * "onPrimaryContainer": "color_primary_700",
 * "inversePrimary": "color_primary_100",
 * "secondary": "color_secondary_500",
 * "onSecondary": "content_on_color",
 * "secondaryContainer": "color_secondary_200",
 * "onSecondaryContainer": "color_secondary_700",
 * "tertiary": "color_grey_600",
 * "onTertiary": "content_on_color",
 * "tertiaryContainer": "background_secondary",
 * "onTertiaryContainer": "content_primary",
 * "background": "background_primary",
 * "onBackground": "content_primary",
 * "surface": "background_secondary",
 * "onSurface": "content_primary",
 * "surfaceVariant": "background_tertiary",
 * "onSurfaceVariant": "content_secondary",
 * "surfaceTint": "color_primary_100",
 * "inverseSurface": "color_primary_600",
 * "inverseOnSurface": "content_on_color",
 * "error": "background_negative",
 * "onError": "content_on_color",
 * "errorContainer": "background_light_negative",
 * "onErrorContainer": "color_red_700",
 * "outline": "border_opaque",
 * "outlineVariant": "border_transparent",
 * "scrim": "background_overlay_dark"
 */
val LightColorPalette = lightColorScheme(
    primary = SightUPColorPalette.primary_600,
    onPrimary = SightUPColorPalette.white,
    primaryContainer = SightUPColorPalette.primary_200,
    onPrimaryContainer = SightUPColorPalette.primary_700,
    inversePrimary = SightUPColorPalette.primary_100,
    secondary = SightUPColorPalette.secondary_500,
    onSecondary = SightUPColorPalette.white,
    secondaryContainer = SightUPColorPalette.secondary_200,
    onSecondaryContainer = SightUPColorPalette.secondary_700,
    tertiary = SightUPColorPalette.neutral_600,
    onTertiary = SightUPColorPalette.white,
    tertiaryContainer = SightUPColorPalette.neutral_0,
    onTertiaryContainer = SightUPColorPalette.black,
    background = SightUPColorPalette.white,
    onBackground = SightUPColorPalette.black,
    surface = SightUPColorPalette.neutral_0,
    onSurface = SightUPColorPalette.black,
    surfaceVariant = SightUPColorPalette.neutral_100,
    onSurfaceVariant = SightUPColorPalette.neutral_600,
    surfaceTint = SightUPColorPalette.primary_100,
    inverseSurface = SightUPColorPalette.primary_600,
    inverseOnSurface = SightUPColorPalette.white,
    error = SightUPColorPalette.error_200,
    onError = SightUPColorPalette.white,
    errorContainer = SightUPColorPalette.error_100,
    onErrorContainer = SightUPColorPalette.error_300,
    outline = SightUPColorPalette.neutral_200,
    outlineVariant = SightUPContextColor.border_transparent,
    scrim = SightUPContextColor.background_overlay_dark,
)

internal val LocalColors = staticCompositionLocalOf { LightColorPalette }
